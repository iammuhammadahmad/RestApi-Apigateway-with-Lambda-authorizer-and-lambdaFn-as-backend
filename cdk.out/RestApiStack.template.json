{
 "Resources": {
  "BackendLambdaFunctionServiceRole11F82449": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestApiStack/BackendLambdaFunction/ServiceRole/Resource"
   }
  },
  "BackendLambdaFunction15282C80": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Ref": "AssetParametersf72374fcdd004395af10e9ea5859c6590c0e57bcfcfb0267516d144b0075d0d8S3BucketC251F426"
     },
     "S3Key": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Select": [
          0,
          {
           "Fn::Split": [
            "||",
            {
             "Ref": "AssetParametersf72374fcdd004395af10e9ea5859c6590c0e57bcfcfb0267516d144b0075d0d8S3VersionKeyA84434E3"
            }
           ]
          }
         ]
        },
        {
         "Fn::Select": [
          1,
          {
           "Fn::Split": [
            "||",
            {
             "Ref": "AssetParametersf72374fcdd004395af10e9ea5859c6590c0e57bcfcfb0267516d144b0075d0d8S3VersionKeyA84434E3"
            }
           ]
          }
         ]
        }
       ]
      ]
     }
    },
    "Role": {
     "Fn::GetAtt": [
      "BackendLambdaFunctionServiceRole11F82449",
      "Arn"
     ]
    },
    "Handler": "main.lambda_handler",
    "Runtime": "python3.9"
   },
   "DependsOn": [
    "BackendLambdaFunctionServiceRole11F82449"
   ],
   "Metadata": {
    "aws:cdk:path": "RestApiStack/BackendLambdaFunction/Resource",
    "aws:asset:path": "asset.f72374fcdd004395af10e9ea5859c6590c0e57bcfcfb0267516d144b0075d0d8",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "lambdaAuthorizerFnServiceRoleC3D05363": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestApiStack/lambdaAuthorizerFn/ServiceRole/Resource"
   }
  },
  "lambdaAuthorizerFnBE01999D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Ref": "AssetParameters472449260be7bf563414efad402f47ec18db04969a664f8a09b8800e77595171S3BucketDC49448C"
     },
     "S3Key": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Select": [
          0,
          {
           "Fn::Split": [
            "||",
            {
             "Ref": "AssetParameters472449260be7bf563414efad402f47ec18db04969a664f8a09b8800e77595171S3VersionKeyD9ECABA7"
            }
           ]
          }
         ]
        },
        {
         "Fn::Select": [
          1,
          {
           "Fn::Split": [
            "||",
            {
             "Ref": "AssetParameters472449260be7bf563414efad402f47ec18db04969a664f8a09b8800e77595171S3VersionKeyD9ECABA7"
            }
           ]
          }
         ]
        }
       ]
      ]
     }
    },
    "Role": {
     "Fn::GetAtt": [
      "lambdaAuthorizerFnServiceRoleC3D05363",
      "Arn"
     ]
    },
    "Handler": "auth.lambda_handler",
    "Runtime": "python3.9"
   },
   "DependsOn": [
    "lambdaAuthorizerFnServiceRoleC3D05363"
   ],
   "Metadata": {
    "aws:cdk:path": "RestApiStack/lambdaAuthorizerFn/Resource",
    "aws:asset:path": "asset.472449260be7bf563414efad402f47ec18db04969a664f8a09b8800e77595171",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "lambdaAuthorizerFnRestApiStackmyAuthorizer1F38963CPermissions498F1272": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "lambdaAuthorizerFnBE01999D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestApi0C43BF4B"
       },
       "/authorizers/",
       {
        "Ref": "myAuthorizerCD809350"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestApiStack/lambdaAuthorizerFn/RestApiStackmyAuthorizer1F38963C:Permissions"
   }
  },
  "myAuthorizerCD809350": {
   "Type": "AWS::ApiGateway::Authorizer",
   "Properties": {
    "Name": "RestApiStackmyAuthorizer1F38963C",
    "RestApiId": {
     "Ref": "RestApi0C43BF4B"
    },
    "Type": "TOKEN",
    "AuthorizerUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":",
           {
            "Fn::GetAtt": [
             "lambdaAuthorizerFnBE01999D",
             "Arn"
            ]
           }
          ]
         }
        ]
       },
       ":apigateway:",
       {
        "Fn::Select": [
         3,
         {
          "Fn::Split": [
           ":",
           {
            "Fn::GetAtt": [
             "lambdaAuthorizerFnBE01999D",
             "Arn"
            ]
           }
          ]
         }
        ]
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "lambdaAuthorizerFnBE01999D",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    },
    "IdentitySource": "method.request.header.Authorization"
   },
   "Metadata": {
    "aws:cdk:path": "RestApiStack/myAuthorizer/Resource"
   }
  },
  "RestApi0C43BF4B": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "RestApi"
   },
   "Metadata": {
    "aws:cdk:path": "RestApiStack/RestApi/Resource"
   }
  },
  "RestApiCloudWatchRoleE3ED6605": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestApiStack/RestApi/CloudWatchRole/Resource"
   }
  },
  "RestApiAccount7C83CF5A": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "RestApiCloudWatchRoleE3ED6605",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "RestApi0C43BF4B"
   ],
   "Metadata": {
    "aws:cdk:path": "RestApiStack/RestApi/Account"
   }
  },
  "RestApiDeployment180EC50365bbea423ee5570397aa694dcc0ec44a": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "RestApi0C43BF4B"
    },
    "Description": "Automatically created by the RestApi construct"
   },
   "DependsOn": [
    "QueryPathValidatorA4133F60",
    "RestApiuservalueGETEE4C4142",
    "RestApiuservalue0E73F71C",
    "RestApiuserPOSTB13CE763",
    "RestApiuser043FE7E4"
   ],
   "Metadata": {
    "aws:cdk:path": "RestApiStack/RestApi/Deployment/Resource"
   }
  },
  "RestApiDeploymentStageprod3855DE66": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "RestApi0C43BF4B"
    },
    "DeploymentId": {
     "Ref": "RestApiDeployment180EC50365bbea423ee5570397aa694dcc0ec44a"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "RestApiAccount7C83CF5A"
   ],
   "Metadata": {
    "aws:cdk:path": "RestApiStack/RestApi/DeploymentStage.prod/Resource"
   }
  },
  "RestApiuser043FE7E4": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "RestApi0C43BF4B",
      "RootResourceId"
     ]
    },
    "PathPart": "user",
    "RestApiId": {
     "Ref": "RestApi0C43BF4B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestApiStack/RestApi/Default/user/Resource"
   }
  },
  "RestApiuservalue0E73F71C": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "RestApiuser043FE7E4"
    },
    "PathPart": "{value}",
    "RestApiId": {
     "Ref": "RestApi0C43BF4B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestApiStack/RestApi/Default/user/{value}/Resource"
   }
  },
  "RestApiuservalueGETApiPermissionRestApiStackRestApiD499FF26GETuservalue360ABF84": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "BackendLambdaFunction15282C80",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestApi0C43BF4B"
       },
       "/",
       {
        "Ref": "RestApiDeploymentStageprod3855DE66"
       },
       "/GET/user/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestApiStack/RestApi/Default/user/{value}/GET/ApiPermission.RestApiStackRestApiD499FF26.GET..user.{value}"
   }
  },
  "RestApiuservalueGETApiPermissionTestRestApiStackRestApiD499FF26GETuservalueC5286911": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "BackendLambdaFunction15282C80",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestApi0C43BF4B"
       },
       "/test-invoke-stage/GET/user/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestApiStack/RestApi/Default/user/{value}/GET/ApiPermission.Test.RestApiStackRestApiD499FF26.GET..user.{value}"
   }
  },
  "RestApiuservalueGETEE4C4142": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "RestApiuservalue0E73F71C"
    },
    "RestApiId": {
     "Ref": "RestApi0C43BF4B"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "myAuthorizerCD809350"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "IntegrationResponses": [
      {
       "StatusCode": "200"
      }
     ],
     "PassthroughBehavior": "WHEN_NO_TEMPLATES",
     "RequestTemplates": {
      "application/json": "#set($allParams = $input.params()) { \"body-json\" : $input.json('$'), \"params\" : { #foreach($type in $allParams.keySet()) #set($params = $allParams.get($type)) \"$type\" : { #foreach($paramName in $params.keySet()) \"$paramName\" : \"$util.escapeJavaScript($params.get($paramName))\" #if($foreach.hasNext),#end #end } #if($foreach.hasNext),#end #end }, \"stage-variables\" : { #foreach($key in $stageVariables.keySet()) \"$key\" : \"$util.escapeJavaScript($stageVariables.get($key))\" #if($foreach.hasNext),#end #end }, \"context\" : { \"http-method\" : \"$context.httpMethod\", \"stage\" : \"$context.stage\" } }"
     },
     "Type": "AWS",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "BackendLambdaFunction15282C80",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "MethodResponses": [
     {
      "StatusCode": "200"
     }
    ],
    "RequestParameters": {
     "method.request.path.value": true
    },
    "RequestValidatorId": {
     "Ref": "QueryPathValidatorA4133F60"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestApiStack/RestApi/Default/user/{value}/GET/Resource"
   }
  },
  "RestApiuserPOSTApiPermissionRestApiStackRestApiD499FF26POSTuserDC25C35B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "BackendLambdaFunction15282C80",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestApi0C43BF4B"
       },
       "/",
       {
        "Ref": "RestApiDeploymentStageprod3855DE66"
       },
       "/POST/user"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestApiStack/RestApi/Default/user/POST/ApiPermission.RestApiStackRestApiD499FF26.POST..user"
   }
  },
  "RestApiuserPOSTApiPermissionTestRestApiStackRestApiD499FF26POSTuserC44F8977": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "BackendLambdaFunction15282C80",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestApi0C43BF4B"
       },
       "/test-invoke-stage/POST/user"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestApiStack/RestApi/Default/user/POST/ApiPermission.Test.RestApiStackRestApiD499FF26.POST..user"
   }
  },
  "RestApiuserPOSTB13CE763": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "RestApiuser043FE7E4"
    },
    "RestApiId": {
     "Ref": "RestApi0C43BF4B"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "myAuthorizerCD809350"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "IntegrationResponses": [
      {
       "StatusCode": "200"
      }
     ],
     "PassthroughBehavior": "WHEN_NO_TEMPLATES",
     "RequestTemplates": {
      "application/json": "#set($allParams = $input.params()) { \"body-json\" : $input.json('$'), \"params\" : { #foreach($type in $allParams.keySet()) #set($params = $allParams.get($type)) \"$type\" : { #foreach($paramName in $params.keySet()) \"$paramName\" : \"$util.escapeJavaScript($params.get($paramName))\" #if($foreach.hasNext),#end #end } #if($foreach.hasNext),#end #end }, \"stage-variables\" : { #foreach($key in $stageVariables.keySet()) \"$key\" : \"$util.escapeJavaScript($stageVariables.get($key))\" #if($foreach.hasNext),#end #end }, \"context\" : { \"http-method\" : \"$context.httpMethod\", \"stage\" : \"$context.stage\" } }"
     },
     "Type": "AWS",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "BackendLambdaFunction15282C80",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "MethodResponses": [
     {
      "StatusCode": "200"
     }
    ],
    "RequestParameters": {
     "method.request.querystring.username": true
    },
    "RequestValidatorId": {
     "Ref": "QueryPathValidatorA4133F60"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestApiStack/RestApi/Default/user/POST/Resource"
   }
  },
  "QueryPathValidatorA4133F60": {
   "Type": "AWS::ApiGateway::RequestValidator",
   "Properties": {
    "RestApiId": {
     "Ref": "RestApi0C43BF4B"
    },
    "Name": "queryPathValidator",
    "ValidateRequestBody": false,
    "ValidateRequestParameters": true
   },
   "Metadata": {
    "aws:cdk:path": "RestApiStack/QueryPathValidator/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VQQU7DMBB8S++u26gHOJIWcUNEAXFfnCVsE9vBXqsKUf6O7bQonHZmNN6ZdSGLu0LuNw9w8VvVdLtJWYdyemVQnSi9R46wJdOKkzWeXVAsTp+mAgcaGV0iL4GHkOUavQ1OYcLR3xCTNbNIy6ce9EcDcnoKRiU5eda4QqfJ+/yAQMuptn1elOYs/GELqY6XuVXk8hhUh3wEjwIGaoHxAqOc3myHpgz8ZR39LA1XLFbkcqBr2xsslbLBsHjEobejRpPPWbH0C7nNAm6H5vD11X/4GWNkk6QrqvE7xMB36KkBtm5x/9fmeRbVGO1md5D3sthvzp5o62I10ijrZf4CaFYkE7UBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "RestApiStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Parameters": {
  "AssetParametersf72374fcdd004395af10e9ea5859c6590c0e57bcfcfb0267516d144b0075d0d8S3BucketC251F426": {
   "Type": "String",
   "Description": "S3 bucket for asset \"f72374fcdd004395af10e9ea5859c6590c0e57bcfcfb0267516d144b0075d0d8\""
  },
  "AssetParametersf72374fcdd004395af10e9ea5859c6590c0e57bcfcfb0267516d144b0075d0d8S3VersionKeyA84434E3": {
   "Type": "String",
   "Description": "S3 key for asset version \"f72374fcdd004395af10e9ea5859c6590c0e57bcfcfb0267516d144b0075d0d8\""
  },
  "AssetParametersf72374fcdd004395af10e9ea5859c6590c0e57bcfcfb0267516d144b0075d0d8ArtifactHashC90A66AB": {
   "Type": "String",
   "Description": "Artifact hash for asset \"f72374fcdd004395af10e9ea5859c6590c0e57bcfcfb0267516d144b0075d0d8\""
  },
  "AssetParameters472449260be7bf563414efad402f47ec18db04969a664f8a09b8800e77595171S3BucketDC49448C": {
   "Type": "String",
   "Description": "S3 bucket for asset \"472449260be7bf563414efad402f47ec18db04969a664f8a09b8800e77595171\""
  },
  "AssetParameters472449260be7bf563414efad402f47ec18db04969a664f8a09b8800e77595171S3VersionKeyD9ECABA7": {
   "Type": "String",
   "Description": "S3 key for asset version \"472449260be7bf563414efad402f47ec18db04969a664f8a09b8800e77595171\""
  },
  "AssetParameters472449260be7bf563414efad402f47ec18db04969a664f8a09b8800e77595171ArtifactHash9B31B299": {
   "Type": "String",
   "Description": "Artifact hash for asset \"472449260be7bf563414efad402f47ec18db04969a664f8a09b8800e77595171\""
  }
 },
 "Outputs": {
  "RestApiEndpoint0551178A": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "RestApi0C43BF4B"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "RestApiDeploymentStageprod3855DE66"
      },
      "/"
     ]
    ]
   }
  },
  "APIURL": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "RestApi0C43BF4B"
      },
      ".execute-api.us-west-1.amazonaws.com/prod/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 }
}